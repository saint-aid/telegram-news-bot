# from transformers import AutoTokenizer, AutoModelForSeq2SeqLM, pipeline

# tokenizer = AutoTokenizer.from_pretrained("digit82/kobart-summarization")
# model = AutoModelForSeq2SeqLM.from_pretrained("digit82/kobart-summarization")

# summarizer = pipeline("summarization", model=model, tokenizer=tokenizer)

# def summarize_text(text):
#     input_len = len(text.split())

#     # ÎÑàÎ¨¥ ÏßßÏùÄ Î≥∏Î¨∏ Î∞©ÏßÄ
#     if input_len < 10:
#         return "[ÏöîÏïΩ ÏÉùÎûµ] Î≥∏Î¨∏Ïù¥ ÎÑàÎ¨¥ ÏßßÏäµÎãàÎã§."

#     # ÎÑàÎ¨¥ Í∏¥ Î≥∏Î¨∏ÏùÄ ÏïûÎ∂ÄÎ∂ÑÎßå ÏÇ¨Ïö©
#     text = text[:1000]
#     max_len = min(200, int(input_len * 1.2))

#     try:
#         result = summarizer(text, max_length=max_len, min_length=20, do_sample=False)

#         if not result or "summary_text" not in result[0]:
#             return "[ÏöîÏïΩ Ïã§Ìå®] ÏöîÏïΩ Í≤∞Í≥ºÍ∞Ä ÏóÜÏäµÎãàÎã§."

#         return result[0]["summary_text"]

#     except IndexError:
#         return "[ÏöîÏïΩ Ïã§Ìå®] ÏöîÏïΩ Í≤∞Í≥ºÍ∞Ä ÎπÑÏñ¥ ÏûàÏäµÎãàÎã§."
#     except Exception as e:
#         return f"[ÏöîÏïΩ Ïã§Ìå®] {str(e)}"


import os
import requests

# ü§ó Hugging Face Inference API URL (KoBART ÏöîÏïΩ Î™®Îç∏)
HUGGINGFACE_API_URL = "https://api-inference.huggingface.co/models/digit82/kobart-summarization"

# ÌôòÍ≤ΩÎ≥ÄÏàòÏóêÏÑú API ÌÜ†ÌÅ∞ Í∞ÄÏ†∏Ïò§Í∏∞ (.env ÎòêÎäî Render ÌôòÍ≤Ω ÏÑ§Ï†ïÏóêÏÑú ÏÑ§Ï†ï)
HUGGINGFACE_API_TOKEN = os.getenv("HF_API_TOKEN")

# ÏöîÏ≤≠ Ìó§Îçî ÏÑ§Ï†ï
headers = {
    "Authorization": f"Bearer {HUGGINGFACE_API_TOKEN}"
}

def summarize_text(text):
    """
    ÌïúÍµ≠Ïñ¥ Îâ¥Ïä§ Î≥∏Î¨∏ÏùÑ Hugging Face Inference APIÎ•º ÌÜµÌï¥ ÏöîÏïΩÌïòÎäî Ìï®Ïàò

    Args:
        text (str): Îâ¥Ïä§ Í∏∞ÏÇ¨ Î≥∏Î¨∏ ÌÖçÏä§Ìä∏

    Returns:
        str: ÏöîÏïΩ Í≤∞Í≥º Î¨∏ÏûêÏó¥ (ÎòêÎäî Ïò§Î•ò Î©îÏãúÏßÄ)
    """

    # Î≥∏Î¨∏Ïù¥ ÎÑàÎ¨¥ ÏßßÏùÑ Í≤ΩÏö∞ ÏöîÏïΩ ÏÉùÎûµ
    input_len = len(text.split())
    if input_len < 10:
        return "[ÏöîÏïΩ ÏÉùÎûµ] Î≥∏Î¨∏Ïù¥ ÎÑàÎ¨¥ ÏßßÏäµÎãàÎã§."

    # ÎÑàÎ¨¥ Í∏¥ ÏûÖÎ†•ÏùÄ ÏïûÎ∂ÄÎ∂ÑÎßå ÏûêÎ¶Ñ (1000Ïûê Ï†úÌïú)
    text = text[:1000]

    try:
        # API ÏöîÏ≤≠
        response = requests.post(
            HUGGINGFACE_API_URL,
            headers=headers,
            json={"inputs": text},
            timeout=30
        )

        # ÏùëÎãµ ÏÑ±Í≥µ Ïãú Í≤∞Í≥º Ï∂îÏ∂ú
        if response.status_code == 200:
            result = response.json()
            if result and isinstance(result, list) and "summary_text" in result[0]:
                return result[0]["summary_text"]
            else:
                return "[ÏöîÏïΩ Ïã§Ìå®] ÏöîÏïΩ Í≤∞Í≥ºÍ∞Ä ÏóÜÏäµÎãàÎã§."
        else:
            return f"[ÏöîÏïΩ Ïã§Ìå®] {response.status_code} - {response.text}"

    except Exception as e:
        return f"[ÏöîÏïΩ Ïã§Ìå®] {str(e)}"
